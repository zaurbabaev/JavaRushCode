У автомобиля, представленного классом Car, есть две характеристики: название - поле name, цена - поле price.
В классе Solution выполняются две операции поиска:

метод getMostExpensiveCar(Stream<Car>) ищет самый дорогой автомобиль в одном списке;
метод getMoreExpensiveCar(Stream<Car>, Car) в другом списке ищет автомобиль дороже, чем полученный в методе getMostExpensiveCar(Stream<Car>).
Методы возвращают не сам автомобиль (объект типа Car), а объект типа Optional<Car>.
Подсказка:
Для поиска элемента с максимальным искомым значением в потоке данных используй метод max(), а чтобы найти первый попавшийся подходящий элемент из потока отфильтрованных данных используй метод findFirst().

Метод main() не принимает участие в тестировании.


Требования:
• В публичном статическом методе getMostExpensiveCar(Stream<Car>)
нужно вызывать метод max() объекта типа Stream<Car>.
• В публичном статическом методе getMoreExpensiveCar(Stream<Car>,
Car) нужно вызывать метод findFirst() объекта типа Stream<Car>.
• Метод
getMostExpensiveCar(Stream<Car>)
нужно реализовать согласно условию.
• Метод
getMore ExpensiveCar(Stream<Car>, Car)
нужно реализовать согласно условию.